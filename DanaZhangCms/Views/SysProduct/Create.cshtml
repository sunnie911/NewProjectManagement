@model DanaZhangCms.Models.Product
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_SysLayout.cshtml";
    List<SelectListItem> parentList = ViewBag.CategoryList;
}
<form class="layui-form" action="@(Model.Id<1? Url.Action("Add"):Url.Action("Edit"))">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="layui-form-item">
        <div class="layui-inline">
            @Html.LabelFor(model => model.Name, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.Name, new { @class = "layui-input", @required = "", @lay_verify = "required", autocomplete = "off" })

            </div>
            <div class="layui-form-mid layui-word-aux">
                <span class="x-red">*</span>

            </div>
        </div>
        <div class="layui-inline">

            @Html.LabelFor(model => model.NameEn, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.NameEn, new { @class = "layui-input", autocomplete = "off" })

            </div>

        </div>
    </div>
    <div class="layui-form-item">
        <div class="layui-inline">
            @Html.LabelFor(model => model.Model1, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.Model1, new { @class = "layui-input", autocomplete = "off" })
            </div>
        </div>

        <div class="layui-inline">
            @Html.LabelFor(model => model.CategoryId, new { @class = "layui-form-label" })
            <div class="layui-input-inline">

                @Html.DropDownListFor(model => model.CategoryId, parentList, "--请选择--", new { @class = "valid" })
            </div>
        </div>
    </div>
    <div class="layui-form-item">
        <div class="layui-inline">
            @Html.LabelFor(model => model.Tag, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.Tag, new { @class = "layui-input" })

            </div>

        </div>
        <div class="layui-inline">
            @Html.LabelFor(model => model.IsHot, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.CheckBoxFor(model => model.IsHot, new { @class = "layui-checkbox" })

            </div>


        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(model => model.ImgUrl, new { @class = "layui-form-label" })
        <div class="layui-input-inline">
            <div class="uploadPreview" id="PreviewImg">
                @if (!string.IsNullOrEmpty(Model.ImgUrl))
                {
                <img src="@Model.ImgUrl" />
                }
                else
                {
                @:暂无图片
                }
            </div>
            <div class="left">
                <div class="uploadProgressBar"></div>
                <div id="UploadImg" class="uploadBut">选择图片</div>
            </div>
            <div class="clear"></div>
        </div>
        @Html.HiddenFor(x => x.ImgUrl)

    </div>
    <div class="layui-form-item">
            @Html.LabelFor(model => model.VedioUrl, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.VedioUrl, new { @class = "layui-input", @required = "",  autocomplete = "off" })

            </div>

        </div>

    @*<div class="layui-form-item">
        @Html.LabelFor(model => model.VedioUrl, new { @class = "layui-form-label" })
        <div class="layui-input-inline">
            <div class="uploadPreview" id="PreviewVedio">
                @if (!string.IsNullOrEmpty(Model.VedioUrl)&& !Model.VedioUrl.Contains("https://"))
                {
                <video width="100%" controls="" preload="auto" autoplay="autoplay">
                    <source src="@Model.VedioUrl" />
                </video>
                }
                 else if (!string.IsNullOrWhiteSpace(Model.VedioUrl))
                    {

                <iframe width="400" id="video" src="@Model.VedioUrl" frameborder="0" allowfullscreen=""></iframe>
                    }

                else
                {
                @:暂无视频
                }
            </div>
            <div class="left">
                <div class="uploadProgressBar"></div>
                <div id="UploadVedio" class="uploadBut">选择视频</div>
            </div>
            <div class="clear"></div>
        </div>
        @Html.HiddenFor(x => x.VedioUrl)

    </div>*@

    <div class="layui-form-item">

        <label class="layui-form-label">产品规格</label>
        <div class="layui-input-inline" style="width:700px;min-height:200px;">

            <a class="layui-btn" onclick="x_admin_show('新增', '/SysContents/Create?pId=' +@Model.Id)"> 新增产品参数</a>
            <a class="layui-btn" onclick="x_admin_show('新增', '/SysContents/Create?type=相关下载&pId=' +@Model.Id)"> 新增相关下载</a>
            <a class="layui-btn" onclick="x_admin_show('新增', '/SysContents/Create?lang=english&pId=' +@Model.Id)"> 新增产品参数英文</a>

            <table class="layui-hidden" id="treeTable" lay-filter="treeTable"></table>

        </div>


    </div>

    

    <div class="layui-form-item">

        @Html.LabelFor(model => model.Content, new { @class = "layui-form-label" })
        <div class="layui-input-inline" style="width:900px;min-height:500px;">

            <script id="Content" name="Content" type="text/plain">
                        @Model.Content
            </script>
            <input type="hidden" name="Content1" id="Content1" value="@Model.Content" />
        </div>

    </div>
    <div class="layui-form-item">
        <div class="layui-inline">

            @Html.LabelFor(model => model.SortId, new { @class = "layui-form-label" })
            <div class="layui-input-inline">
                @Html.TextBoxFor(model => model.SortId, new { @class = "layui-input", @required = "", @lay_verify = "required", autocomplete = "off" })

            </div>
            <div class="layui-form-mid layui-word-aux">
                <span class="x-red">*</span>

            </div>
        </div>


    </div>



    <div class="layui-form-item">
        <label for="L_repass" class="layui-form-label">
        </label>
        <button class="layui-btn" lay-filter="add" lay-submit="">
            保存
        </button>
    </div>
</form>
@section Scripts{



    <link type="text/css" rel="stylesheet" href="/lib/webuploader/webuploader.css" />
    <script type="text/javascript" src="/lib/webuploader/webuploader.js"></script>
    <script src="/lib/ueditor/ueditor.config.js"></script>
    <script src="/lib/ueditor/ueditor.all.min.js"></script>
    <script>

        var editObj = null, ptable = null, treeGrid = null, tableId = 'treeTable', layer = null;
        layui.config({
            base: '/lib/layui/extend/'
        }).extend({
            treeGrid: 'treeGrid'
        }).use(['jquery', 'treeGrid', 'layer'], function () {
            var $ = layui.jquery;
            treeGrid = layui.treeGrid;//很重要
            layer = layui.layer;
            ptable = treeGrid.render({
                id: tableId
                , elem: '#' + tableId
                , idField: 'id'
                , url: '/SysProduct/GetEntitiesByProductId?pId=' +@Model.Id
                , cellMinWidth: 100
                , treeId: 'id'//树形id字段名称
                , treeUpId: 'parentId'//树形父id字段名称
                , treeShowName: 'name'//以树形式显示的字段
                , cols: [[
                    { field: 'title', edit: 'text', width: 300, title: '参数名称' },
                    { field: 'type', title: '类型' },
                    {
                        width: 200, title: '操作', align: 'center'/*toolbar: '#barDemo'*/
                        , templet: function (d) {
                            var html = '';
                            var addBtn = '<a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="add">修改</a>';
                            var delBtn = '<a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>';
                            return addBtn + delBtn;
                        }
                    }
                ]]
                , page: false
            });

            treeGrid.on('tool(' + tableId + ')', function (obj) {
                var data = obj.data;
                var id=obj.data.id;
                if (obj.event === 'del') {//删除行
                    layer.confirm('真的删除内容吗？', function (index) {
                        obj.del(); //删除对应行（tr）的DOM结构
                        layer.close(index);
                        var url = " /SysContents/Delete?id=" + data.id;
                        //向服务端发送删除指令
                        $.ajax({
                            url: url,
                            type: "post",
                            success: function (rep) {
                                if (rep.success == true) {
                                    layer.msg(rep.msg);
                                }
                                else {
                                    layer.alert(rep.msg, { icon: 5 });
                                }

                            },
                            error: function () {
                                layer.alert("网络错误，请稍候再试。", { icon: 5 });
                            }
                        });


                    });
                } else if (obj.event === "add") {//添加行
                   // add(obj.data);
                    x_admin_show('新增','/SysContents/Edit'+'?id='+id)
                }
            });
        });

    </script>

    <script>

        var ue = UE.getEditor('Content', {
            initialFrameHeight:800
        });
        var oldhtml = $("#Content1").val();

        ue.ready(function () {
            ue.setContent(oldhtml);
        });
 
        $(function () {


  var uploader = WebUploader.create({
                pick: '#UploadImg',
                auto: true,
                swf: '/lib/webuploader/Uploader.swf',
                server: '/tool/upload?operation=bimage',
                fileVal: 'upload',
                accept: {
                    title: 'Images',
                    mimeTypes: 'image/*'
                },

            });

            uploader.on('uploadProgress', function (file, percentage) {
                $("#PreviewImg").html("上传中...");
            });

            uploader.on('uploadSuccess', function (file, response) {
                var data = eval("(" + response._raw + ")");;
                if (!data.uploaded) {
                    $("#PreviewImg").html(data.url);
                }

                else {
                    $("#PreviewImg").html("<img src=\"" + data.url + "\"  />");
                    $("#ImgUrl").val(data.url);
                }
            });

            uploader.on('uploadError', function (file) {
                $("#PreviewImg").html("上传失败");
            });

            var uploader2 = WebUploader.create({
                pick: '#UploadImg2',
                auto: true,
                swf: '/lib/webuploader/Uploader.swf',
                server: '/tool/upload?operation=bimage',
                fileVal: 'upload',
                accept: {
                    title: 'Images',
                    mimeTypes: 'image/*'
                },

            });

            uploader2.on('uploadProgress', function (file, percentage) {
                $("#PreviewImg2").html("上传中...");
            });

            uploader2.on('uploadSuccess', function (file, response) {
                var data = eval("(" + response._raw + ")");;
                if (!data.uploaded) {
                    $("#PreviewImg2").html(data.url);
                }

                else {
                    $("#PreviewImg2").html("<img src=\"" + data.url + "\"  />");
                    $("#Banner2").val(data.url);
                }
            });

            uploader2.on('uploadError', function (file) {
                $("#PreviewImg2").html("上传失败");
            });

            var uploader3 = WebUploader.create({
                pick: '#UploadImg3',
                auto: true,
                swf: '/lib/webuploader/Uploader.swf',
                server: '/tool/upload?operation=bimage',
                fileVal: 'upload',
                accept: {
                    title: 'Images',
                    mimeTypes: 'image/*'
                },

            });

            uploader3.on('uploadProgress', function (file, percentage) {
                $("#PreviewImg3").html("上传中...");
            });

            uploader3.on('uploadSuccess', function (file, response) {
                var data = eval("(" + response._raw + ")");;
                if (!data.uploaded) {
                    $("#PreviewImg3").html(data.url);
                }

                else {
                    $("#PreviewImg3").html("<img src=\"" + data.url + "\"  />");
                    $("#Banner3").val(data.url);
                }
            });

            uploader3.on('uploadError', function (file) {
                $("#PreviewImg3").html("上传失败");
            });

            var uploader4 = WebUploader.create({
                pick: '#UploadImg1',
                auto: true,
                swf: '/lib/webuploader/Uploader.swf',
                server: '/tool/upload?operation=bimage',
                fileVal: 'upload',
                accept: {
                    title: 'Images',
                    mimeTypes: 'image/*'
                },

            });

            uploader4.on('uploadProgress', function (file, percentage) {
                $("#PreviewImg1").html("上传中...");
            });

            uploader4.on('uploadSuccess', function (file, response) {
                var data = eval("(" + response._raw + ")");;
                if (!data.uploaded) {
                    $("#PreviewImg1").html(data.url);
                }

                else {
                    $("#PreviewImg1").html("<img src=\"" + data.url + "\"  />");
                    $("#Banner1").val(data.url);
                }
            });

            uploader4.on('uploadError', function (file) {
                $("#PreviewImg1").html("上传失败");
            });
            var uploader1 = WebUploader.create({
                pick: '#UploadVedio',
                auto: true,
                swf: '/lib/webuploader/Uploader.swf',
                server: '/tool/upload?operation=bvedio',
                fileVal: 'upload',
                accept: {
                    title: 'Vedio',
                    extensions: 'mp4,flv,swf,wmv,flv',
                    mimeTypes: 'vedio/*'
                },
                chunked: true,
                chunkSize: 10 * 1024 * 1024,
                chunkRetry: 3,
                threads: 5,
                fileSizeLimit: 1024 * 1024 * 1024 * 2,
                duplicate: true,

            });

            uploader1.on('uploadProgress', function (file, percentage) {
                $("#PreviewVedio").html("上传中...");
            });

            uploader1.on('uploadSuccess', function (file, response) {
                var data = eval("(" + response._raw + ")");;
                if (!data.uploaded) {
                    $("#PreviewVedio").html(data.url);
                }

                else {
                    $("#PreviewVedio").html(" <video width='100%'   preload='auto' autoplay='autoplay'><source src = \"" + data.url + "\"  /></video >");

                    $("#VedioUrl").val(data.url);
                }
            });

            uploader1.on('uploadError', function (file) {
                $("#PreviewVedio").html("上传失败");
            });
            layui.use('form', function () {
                var form = layui.form;


                form.on('submit(add)', function (data) {
                    var url = $(".layui-form").attr("action");

                    var data = $("form").serialize();

                    $.ajax({
                        url: url,
                        data: data,
                        type:"post",
                        success: function (rep) {
                            if (rep.success == true) {
                                layer.msg(rep.msg,function(){
                                    window.location.href='@(Url.Action("Index"))';
                                });
                    }
                    else {
                                layer.alert(rep.msg, { icon: 5 });
                    }

                        },
                        error: function () {
                            layer.alert("网络错误，请稍候再试。", { icon: 5 });
                        }
                    });


                    return false;
                });
            });
        })


    </script>
}